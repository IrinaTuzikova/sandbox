Задание №21: Реализовать интеграцию тестов с баг-трекером MantisBT
Представьте себе, что баг-репорты для тестируемой системы хранятся в баг-трекере MantisBT. Некоторые автотесты невозможно выполнить из-за наличия багов в тестируемой системе. До тех пор, пока баг не исправлен, тест выполнять нет смысла, он должен быть отключен. Но как только статус баг-репорта меняется -- тест должен автоматически активироваться. Необходимо реализовать такую интеграцию тестов с баг-трекером.

Для этого нужно сделать следующее:

1) В классе TestBase, от которого наследуются все тесты, необходимо реализовать функцию boolean isIssueOpen(int issueId) , которая должна через Remote API получать из баг-трекера информацию о баг-репорте с заданным идентификатором, и возвращать значение false или true в зависимости от того, помечен он как исправленный или нет.

2) Туда же в TestBase необходимо добавить такую функцию:

public void skipIfNotFixed(int issueId) {
  if (isIssueOpen(issueId)) {
    throw new SkipException("Ignored because of issue " + issueId)
  }
}

и вызывать её в начале нужного теста, чтобы он пропускался, если баг ещё не исправлен.



Задание №22: Реализовать интеграцию тестов с баг-трекером Bugify
Представьте себе, что баг-репорты для тестируемой системы хранятся в баг-трекере Bugify. Некоторые автотесты невозможно выполнить из-за наличия багов в тестируемой системе. До тех пор, пока баг не исправлен, тест выполнять нет смысла, он должен быть отключен. Но как только статус баг-репорта меняется -- тест должен автоматически активироваться. Необходимо реализовать такую интеграцию тестов с баг-трекером.

Для этого нужно сделать следующее:

1) В классе TestBase, от которого наследуются все тесты, необходимо реализовать функцию boolean isIssueOpen(int issueId) , которая должна через Remote API получать из баг-трекера информацию о баг-репорте с заданным идентификатором, и возвращать значение false или true в зависимости от того, помечен он как исправленный или нет.

2) Туда же в TestBase необходимо добавить такую функцию:

public void skipIfNotFixed(int issueId) {
  if (isIssueOpen(issueId)) {
    throw new SkipException("Ignored because of issue " + issueId)
  }
}

и вызывать её в начале нужного теста, чтобы он пропускался, если баг ещё не исправлен.




