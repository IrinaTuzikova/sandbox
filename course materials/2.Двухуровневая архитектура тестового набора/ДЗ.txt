Задание №3: Подключить тестовый фреймворк и сделать первые тесты
Подключить к модулю sandbox тестовый фреймворк TestNG и сделать несколько тестов для класса Point, которые проверяют, что расстояние между точками вычисляется правильно.


Задание №4: Сделать тесты для создания групп и контактов в адресной книге
1. Перед выполнением этого задания необходимо подготовить тестовый стенд и установить учебное приложение (адресная книга с веб-интерфейсом) в соответствии с инструкцией.

2. Повторить действия, которые были продемонстрированы в лекциях:

Создать новый модуль addressbook-web-tests в уже существующем проекте, аналгично тому, как ранее создавался модуль sandbox
Записать в Selenium Builder тест для создания новой группы в адресной книге
Перевести тест на язык Java и перенести его в среду разработки (при экспорте использовать формат "Java/TestNG")
Добавить в созданный модуль зависимость от библиотеки Selenium
Внимание: уже доступна версия Selenium 3.0, но её пока рано использовать. Вместо этого нужно указать зависимость от последней стабильной версии:
compile 'org.seleniumhq.selenium:selenium-java:2.53.1'
Убедиться, что проект успешно компилируется и тест успешно выполняется.
В этот момент можно уложить промежуточные результаты работы в репозиторий.
Выделить из кода теста вспомогательные методы, в том числе метод заполнения формы.
В этот момент можно опять уложить промежуточные результаты работы в репозиторий.
Параметризовать метод заполнения формы.
Сгруппировать параметры метода заполнения формы в объект, сделать вспомогательный "модельный" класс GroupData для представления таких объектов.
И снова можно уложить результаты работы в репозиторий. Делайте это после каждого успешного шага. А если что-то сломалось -- можно отменить изменения, вернуться к предыдущему работающему состоянию, и попробовать ещё раз.
3. А затем сделать тест для создания нового контакта, проделав аналогичную последовательностью действий.



Задание №5: Реализовать двухуровневую архитектуру тестового набора
Повторить действия, продемонстрированные в лекциях, выполняя одновременно трансформацию тестов и для групп, и для контактов:

Сделать общий базовый класс для тестов TestBase, перенести вспомогательные методы в него (включая инициализацию и завершение)
Сделать класс ApplicationManager и перенести вспомогательные методы в него, это рекомендуется делать при помощи рефакторинга в два шага, как описано в лекции "Заменяем наследование на делегирование".
Выделить из ApplicationManager специализированные классы-помощники NavigationHelper, GroupHelper и ContactHelper, перенести в них из ApplicationManager соответствующие вспомогательные методы.
Создать для этих вспомогательных классов общий базовый класс BaseHelper, перенести в него низкоуровневые вспмогательные методы (заполнение отдельного поля, нажатие на кнопку или ссылку).
После каждого шага проверяйте, что проект компилируется и тесты работают. Кроме того, после каждого успешного шага делайте commit в репозиторий. Если что-то сломалось, не получилось сделать какой-то шаг -- отмените изменения, вернитесь к предыдущему работающему состоянию и попробуйте ещё раз.



Задание №6: Сделать тесты для удаления и модификации групп и контактов
Реализовать все недостающие (не реализованные в предыдущих домашних заданиях) тесты для создания, удаления и модификации групп и контактов, создавая попутно вспомогательные методы, какие потребуются.

При этом вспомогательные методы сразу добавляйте в соответствующие классы-помощники.

Для создания вспомогательных методов можно использовать рекордер, но сценарий целиком не нужно записывать, пишите сценарии вручную как последовательность обращений к вспомогательным методам.

Для закрытия диалогового окна (alert), которое появляется при удалении контакта, нужно использовать такую команду драйвера:

wd.switchTo().alert().accept();

После каждого шага проверяйте, что проект компилируется и тесты работают. Кроме того, после каждого успешного шага делайте commit в репозиторий. Если что-то сломалось, не получилось сделать какой-то шаг -- отмените изменения, вернитесь к предыдущему работающему состоянию и попробуйте ещё раз.